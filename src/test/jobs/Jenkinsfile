pipeline {

    agent any

    tools {
        maven '3.8.7'
    }

    environment {
        APPLICATION_NAME = 'jenkins-plugin-devops-portal'
        // Enable the reporting of the quality analysis to a remote SonarQube instance
        SONAR_CREDENTIAL = null
        // Enable custom SSL certificate to reach the remote SonarQube instance
        SONAR_CUSTOM_DOMAIN = null
        SONAR_CUSTOM_PORT = '443'
        // Simulate a deployment over the given environment
        DEPLOYMENT_ENV = null
    }

    stages {

        stage('Checkout') {
            steps {
                deleteDir()
                git branch: 'develop', url: 'https://github.com/jenkinsci/devops-portal-plugin.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    env.APPLICATION_VERSION = sh(script: "grep -m1 '<changelist>' pom.xml | cut -d '<' -f2  | cut -d '>' -f2", returnStdout: true).trim()
                    withMaven() {
                        sh 'mvn -B -V -U -e -DskipTests -Dspotbugs.skip=true clean package dependency-check:aggregate'
                    }
                    reportBuild(
                        applicationName: env.APPLICATION_NAME,
                        applicationVersion: env.APPLICATION_VERSION,
                        applicationComponent: 'plugin-devops-portal',
                        artifactFileName: 'target/devops-portal.hpi'
                    )
                    reportMavenDependenciesAnalysis(
                        applicationName: env.APPLICATION_NAME,
                        applicationVersion: env.APPLICATION_VERSION,
                        applicationComponent: 'plugin-devops-portal',
                        reportPath: 'target/dependency-check-report.xml'
                    )
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'target/devops-portal.hpi', onlyIfSuccessful: true
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    withMaven() {
                        sh 'mvn -B test -Duser.language=en -Duser.region=US'
                    }
                    reportSurefireTest(
                        applicationName: env.APPLICATION_NAME,
                        applicationVersion: env.APPLICATION_VERSION,
                        applicationComponent: 'plugin-devops-portal',
                        surefireReportPath: 'target/surefire-reports/*.xml'
                    )
                }
            }
        }

        stage('Audit') {
            when {
                expression { env.SONAR_CREDENTIAL != null }
            }
            steps {
                script {

                    // Quality audit reported from SonarQube
                    withSonarQubeEnv(credentialsId: env.SONAR_CREDENTIAL, installationName: 'SonarQube Scanner') {
                        withMaven() {
                            if (env.SONAR_CUSTOM_DOMAIN != null) {
                                dir ('src/test/jobs') {
                                    sh "./generate_jks.sh ${env.SONAR_CUSTOM_DOMAIN} ${env.SONAR_CUSTOM_PORT}"
                                }
                                sh 'mvn -Djavax.net.ssl.trustStore=src/test/jobs/test.jks -Djavax.net.ssl.trustStorePassword=123456789 sonar:sonar'
                            }
                            else {
                                sh 'mvn sonar:sonar'
                            }
                        }
                        reportSonarQubeAudit(
                            applicationName: env.APPLICATION_NAME,
                            applicationVersion: env.APPLICATION_VERSION,
                            applicationComponent: 'plugin-devops-portal',
                            projectKey: 'io.jenkins.plugins.devops-portal:' + env.APPLICATION_VERSION,
                            acceptInvalidCertificate: true
                        )
                    }

                }
            }
        }

        stage('Release') {
            steps {
                script {
                    reportArtifactRelease(
                        applicationName: env.APPLICATION_NAME,
                        applicationVersion: env.APPLICATION_VERSION,
                        applicationComponent: 'plugin-devops-portal',
                        repositoryName: 'github.com',
                        artifactName: env.APPLICATION_NAME,
                        tags: "hpi,${env.APPLICATION_VERSION}",
                        artifactURL: "https://github.com/jenkinsci/devops-portal-plugin/releases/tag/${env.APPLICATION_VERSION}"
                    )
                }
            }
        }

        stage('Deploy') {
            when {
                expression { env.DEPLOYMENT_ENV != null }
            }
            steps {
                script {
                    reportDeployOperation(
                        targetService: env.DEPLOYMENT_ENV,
                        applicationName: env.APPLICATION_NAME,
                        applicationVersion: env.APPLICATION_VERSION
                    )
                }
            }

        }

    }

}